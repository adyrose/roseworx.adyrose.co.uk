{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../roseworx/js/bitfx/rwxBitExplosions.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","rwxBitExplosions","rwxBitFont","constructor","super","this","spareColorDefault","execute2","el","mc","bits","orientation","shape","color","bgcolor","sparecolor","hasAttribute","getAttribute","rwxBitExplosion","rwxComponent","manualControl","enableResizeDebounce","enableAnimationLoop","enableScrollIntoView","enableMouseTracking","uniqueID","rwxMisc","uniqueId","style","backgroundColor","bitColor","spareParticleColor","startParticlesize","spareParticleSize","boundaryFromWordToSpareParticle","numberOfSpareParticles","elFullSizeAbsolute","createCanvas","calculateLetterParticles","matrix","calculateSpareParticles","calculateAnimationPath","createMouseParticle","mouseParticle","rwxParticle","width","height","dimensions","bitSize","rwxBitFontGetMatrix","wordParticles","map","mp","letterparticle","x","y","isLetter","actualparticlesize","particleSize","spareParticles","boundaries","toAddToMax","toMinusFromMin","min","bitx","bity","max","xIncrement","yIncrement","xCounter","yCounter","w","toContinue","h","b","allParticles","start","rwxMath","randomInt","center","calculateCluster","xbound","cp1","cp2","animationPath","from","cluster","to","duration","easing","final","animationStep","limit","counter","clusterArr","particleCounter","i2","entries","anglecounter","angle","particle","coords","rwxGeometry","getCoordinatesFromAngle","toRadians","radius","scrolledIntoView","startAnimation","stopScroll","stopAnimation","moused","animate","dont","val","xt","yt","rwxAnimate","fromToBezier","getEasingValue","fromToCalc","draw","update","radiusExpanded","setRadius","fromTo","isInsideCircle","mouse","closestPointOnCircumference","resize","sizeCanvas"],"mappings":"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","file":"js/bitexplosionpage.8e86ad1a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([360,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { rwxComponent } from '../rwxCore';\n\nimport { rwxCanvas, rwxMath, rwxAnimate, rwxDOM, rwxMisc, rwxGeometry } from '../helpers/rwxHelpers';\n\nimport {rwxParticle} from './rwxParticle';\n\nimport {rwxBitFont, rwxBitFontGetMatrix} from './rwxBitFont';\n\nclass rwxBitExplosions extends rwxBitFont {\n\tconstructor()\n\t{\n\t\tsuper('rwx-bit-explosion');\n\t\tthis.spareColorDefault = \"#FFFFFF\";\n\t}\n\n\texecute2(el, mc, bits, orientation, shape, color, bgcolor)\n\t{\n\t\tlet sparecolor = el.hasAttribute('data-rwx-bit-explosion-secondary-color') ? el.getAttribute('data-rwx-bit-explosion-secondary-color') : this.spareColorDefault;\n\t\treturn new rwxBitExplosion(el, mc, bits, orientation, shape, color, bgcolor, sparecolor);\n\t}\n}\n\nclass rwxBitExplosion extends rwxComponent {\n\tconstructor(el, manualControl, bits, orientation, shape, color, bgcolor, sparecolor)\n\t{\n\t\tsuper({enableResizeDebounce: true, enableAnimationLoop: true, enableScrollIntoView: !manualControl, enableMouseTracking:true})\n\t\tthis.el = el;\n\t\tthis.uniqueID = rwxMisc.uniqueId();\n\t\tthis.el.style.backgroundColor = bgcolor;\n\t\tthis.shape = shape;\n\t\tthis.bits = bits;\n\t\tthis.orientation = orientation;\n\t\tthis.bitColor = color;\n\t\tthis.backgroundColor = bgcolor;\n\t\tthis.spareParticleColor = sparecolor;\n\t\tthis.startParticlesize = 3;\n\t\tthis.spareParticleSize = 1;\n\t\tthis.boundaryFromWordToSpareParticle = 10;\n\t\tthis.numberOfSpareParticles = 20;\n\t\tthis.elFullSizeAbsolute();\n\t\tthis.createCanvas();\n\t\tthis.calculateLetterParticles();\n\t\tif(!this.matrix)return;\n\t\tthis.calculateSpareParticles();\n\t\tthis.calculateAnimationPath();\n\t\tthis.createMouseParticle();\n\t}\n\n\tcreateMouseParticle()\n\t{\n\t\tthis.mouseParticle = new rwxParticle(this.width/2, this.height/2, this.matrix[0].dimensions.bitSize, 'circle', this.backgroundColor, this.c, 2);\n\t}\n\n\tcalculateLetterParticles()\n\t{\n\t\tthis.matrix = rwxBitFontGetMatrix(this.bits, this.orientation, this.width, this.height);\n\t\tthis.wordParticles = [];\n\t\tif(!this.matrix)return;\n\t\tthis.matrix.map((m)=>{\n\t\t\tm.matrix.map((mp)=>{\n\t\t\t\tlet letterparticle = new rwxParticle(mp.x, mp.y, this.startParticlesize, this.shape, this.spareParticleColor, this.c)\n\t\t\t\tletterparticle.isLetter = true;\n\t\t\t\tletterparticle.actualparticlesize = m.dimensions.particleSize;\n\t\t\t\tthis.wordParticles.push(letterparticle);\n\t\t\t\treturn;\n\t\t\t});\n\t\t\treturn;\n\t\t});\n\t}\n\n\tcalculateSpareParticles()\n\t{\n\t\tthis.spareParticles = [];\n\t\tconst boundaries = [];\n\t\tconst toAddToMax = this.matrix[0].dimensions.bitSize + this.boundaryFromWordToSpareParticle;\n\t\tconst toMinusFromMin = this.boundaryFromWordToSpareParticle;\n\t\tthis.matrix.map((m,i)=>{\n\t\t\ti==0 && boundaries.push({min:{x: m.bitx-toMinusFromMin, y:m.bity-toMinusFromMin}});\n\t\t\tif(i>0 && (m.bity > this.matrix[i-1].bity))\n\t\t\t{\n\t\t\t\tboundaries[boundaries.length-1].max = {x: this.matrix[i-1].bitx + toAddToMax, y: this.matrix[i-1].bity + toAddToMax};\n\t\t\t\tboundaries.push({min:{x: m.bitx-toMinusFromMin, y:m.bity-toMinusFromMin}});\n\t\t\t}\n\t\t\tif(i== this.matrix.length-1){boundaries[boundaries.length-1].max = {x: m.bitx + toAddToMax, y: m.bity + toAddToMax};}\n\t\t\treturn;\n\t\t});\n\n\t\tlet xIncrement = (this.width / this.numberOfSpareParticles);\n\t\tlet yIncrement = (this.height / this.numberOfSpareParticles);\n\t\tlet xCounter = xIncrement/2;\n\t\tlet yCounter = yIncrement/2;\n\t\tfor(let w=0;w<this.numberOfSpareParticles;w++)\n\t\t{\n\t\t\ttoContinue: for(let h=0;h<this.numberOfSpareParticles;h++)\n\t\t\t{\n\t\t\t\tfor(let b of boundaries)\n\t\t\t\t{\n\t\t\t\t\tif(xCounter >= b.min.x && xCounter <= b.max.x && yCounter >= b.min.y && yCounter <= b.max.y)\n\t\t\t\t\t{\n\t\t\t\t\t\tyCounter += yIncrement;\n\t\t\t\t\t\tcontinue toContinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.spareParticles.push(new rwxParticle(xCounter, yCounter, this.startParticlesize, this.shape, this.spareParticleColor, this.c));\n\t\t\t\tyCounter += yIncrement;\n\t\t\t}\n\t\t\txCounter+=xIncrement;\n\t\t\tyCounter = yIncrement/2;\n\t\t}\n\t}\n\n\tcalculateAnimationPath()\n\t{\n\t\tthis.allParticles = [...this.spareParticles, ...this.wordParticles];\n\t\tlet start = {x:rwxMath.randomInt(0, this.width) , y:this.height+50};\n\t\tlet center = {x:this.width/2, y:this.height/2};\n\n\t\tthis.calculateCluster(start);\n\n\t\tlet xbound = start.x < this.width/2 ? [0, this.width/2] : [this.width/2, this.width];\n\t\tlet cp1 = {x:rwxMath.randomInt(xbound[0],xbound[1]), y:0};\n\n\t\tlet cp2 = {x:center.x, y:0};\n\t\tthis.allParticles.map((p,i)=>{\n\t\t\tp.animationPath = [{from:{x:p.cluster.x, y:p.cluster.y}, to:{x:center.x, y:center.y}, cp1, cp2, duration:4000, easing:'easeInQuint'}];\n\t\t\tp.animationPath.push({from:{x:center.x, y:center.y}, to:{x:p.x, y:p.y}, duration:rwxMath.randomInt(1000,5000), easing:'easeOutQuart'});\n\t\t\tp.final = {x: p.x, y: p.y};\n\t\t\tp.animationStep = 0;\n\t\t\treturn;\n\t\t});\n\n\t}\n\n\tcalculateCluster(center)\n\t{\n\t\tlet limit = 6;\n\t\tlet counter = 0;\n\t\tlet clusterArr = [];\n\t\tthis.allParticles.map((p,i)=>{\n\t\t\tif(i>0)\n\t\t\t{\n\t\t\t\tif(counter==limit)\n\t\t\t\t{\n\t\t\t\t\tlimit = limit*2;\n\t\t\t\t\tclusterArr.push(counter);\n\t\t\t\t\tcounter = 0;\n\t\t\t\t}\n\t\t\t\tcounter+=1;\n\t\t\t\tif(i == this.allParticles.length-1)\n\t\t\t\t{\n\t\t\t\t\tclusterArr.push(counter);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tp.cluster = {x: center.x, y: center.y};\n\t\t\t}\n\t\t});\n\n\t\tlet particleCounter = 1;\n\t\tfor(let [i2, c] of clusterArr.entries())\n\t\t{\n\t\t\tlet anglecounter = 0;\n\t\t\tlet angle = 360 / c;\n\t\t\tfor(let i=0;i<c;i++)\n\t\t\t{\n\t\t\t\tlet particle = this.allParticles[particleCounter];\n\t\t\t\tlet coords = rwxGeometry.getCoordinatesFromAngle(center, rwxGeometry.toRadians(anglecounter), particle.radius*4*(i2+1));\n\t\t\t\tparticle.cluster = {x: coords.x, y: coords.y};\n\t\t\t\tanglecounter+=angle;\n\t\t\t\tparticleCounter +=1;\n\t\t\t}\n\t\t}\n\t}\n\n\tscrolledIntoView()\n\t{\n\t\tif(this.allParticles.length == 0){\n\t\t\tthis.stopAnimation = true;\n\t\t\treturn;\n\t\t}\t\t\n\t\tthis.startAnimation();\n\t\tthis.stopScroll = true;\n\t}\n\n\tmoused()\n\t{\n\t\treturn;\n\t}\n\n\tanimate()\n\t{\n\t\tthis.allParticles.map((p, i)=>{\n\t\t\tif(p.animationPath && p.animationPath.length > p.animationStep)\n\t\t\t{\n\t\t\t\tp.dont = false;\n\t\t\t\tlet particle = p.animationPath[p.animationStep];\n\t\t\t\tlet val, xt, yt;\n\t\t\t\tif(p.animationStep == 0)\n\t\t\t\t{\n\t\t\t\t\tlet { x, y } = rwxAnimate.fromToBezier(particle.from, particle.cp1, particle.cp2, particle.to, `${this.uniqueID}particleinit${i}${p.animationStep}`, particle.easing, particle.duration, ()=>{p.animationStep+=1; p.dont = true});\n\t\t\t\t\txt = x;\n\t\t\t\t\tyt = y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tval = rwxAnimate.getEasingValue(`${this.uniqueID}particleinit${i}${p.animationStep}`, particle.easing, particle.duration, ()=>{p.animationStep+=1; p.dont = true});\n\t\t\t\t\txt = rwxAnimate.fromToCalc(particle.from.x, particle.to.x, val);\n\t\t\t\t\tyt = rwxAnimate.fromToCalc(particle.from.y, particle.to.y, val);\n\t\t\t\t}\n\t\t\t\tif(!p.dont)\n\t\t\t\t{\n\t\t\t\t\tp.update(xt,yt);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tp.draw();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(!p.radiusExpanded)\n\t\t\t\t{\n\t\t\t\t\tlet r = p.isLetter ? p.actualparticlesize : this.spareParticleSize;\n\t\t\t\t\tp.setRadius(rwxAnimate.fromTo(this.startParticlesize, r, `${this.uniqueID}particleradius${i}`, 'easeOutQuad', 1000, ()=>{p.radiusExpanded=true;}));\n\t\t\t\t\tif(p.isLetter)\n\t\t\t\t\t{\n\t\t\t\t\t\tp.color = this.bitColor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(!p.isLetter)\n\t\t\t\t\t{\n\t\t\t\t\t\tp.setRadius(rwxAnimate.fromTo(this.spareParticleSize, this.startParticlesize, `${this.uniqueID}particleradiuse${i}`, 'easeInQuad', 1000, ()=>{p.radiusExpanded=false;}));\n\t\t\t\t\t}\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\tlet coords;\n\t\t\t\tif(rwxGeometry.isInsideCircle(p.final, this.mouse, this.matrix[0].dimensions.bitSize))\n\t\t\t\t{\n\t\t\t\t\tcoords = rwxGeometry.closestPointOnCircumference(p.final, this.mouse, this.matrix[0].dimensions.bitSize);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcoords = p.final;\n\t\t\t\t}\n\t\t\t\tp.update(coords.x, coords.y);\n\t\t\t}\n\t\t\treturn;\n\t\t});\n\t}\n\n\tresize()\n\t{\n\t\tthis.sizeCanvas();\n\t\tthis.matrix = rwxBitFontGetMatrix(this.bits, this.orientation, this.width, this.height);\n\t\tlet counter = 0;\n\t\tthis.matrix.map((m)=>{\n\t\t\tm.matrix.map((mp)=>{\n\t\t\t\tthis.wordParticles[counter].x = mp.x;\n\t\t\t\tthis.wordParticles[counter].y = mp.y;\n\t\t\t\tthis.wordParticles[counter].final = {x: mp.x, y:mp.y};\n\t\t\t\tthis.wordParticles[counter].setRadius(m.dimensions.particleSize);\n\t\t\t\tcounter+=1;\n\t\t\t\treturn;\n\t\t\t});\n\t\t\treturn;\n\t\t});\n\t\tthis.calculateSpareParticles();\n\t\tthis.allParticles = [...this.spareParticles, ...this.wordParticles];\n\t\tthis.allParticles.map((p)=>p.final={x:p.x,y:p.y});\n\t}\n}\n\nexport default new rwxBitExplosions();"],"sourceRoot":""}